# This is a basic workflow to help you get started with Actions
name: 执行rclone命令
# Controls when the workflow will run
on:
  # watch:
  #   types: started
  workflow_dispatch:
  repository_dispatch:
    types:
      - excuterclone
    inputs:
    name:
      description: 'Person to greet'
      required: true
      default: 'Mona the Octocat'
  #     #远程触发backupnow
  # schedule:
  #     - cron: '00 22 * * *'
  #     - cron: '00 3 * * *'
  #     - cron: '00 9 * * *'
  #     - cron: '00 14 * * *'
      #快8小时
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v2.5.0
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
          
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      
      - name: 安装rclone
        run: sudo apt-get install -y rclone

      - name: 安装python包
        run: pip install requests vthread coloredlogs bottle cryptography

      - name: 启动api服务器
        run: nohup python api_server.py &

      - name: 启动aliyunwebdav
        env:
          KEY: ${{secrets.KEY}}
        run: |
          wget --post-data '{"key": "'$KEY'"}' http://127.0.0.1:8088/api/getRefreshToken -O /tmp/refreshtoken.bin
          wget  http://127.0.0.1:8088/api/aliyunwebdav/latest/url -O /tmp/aliyundavURL
          wget `cat /tmp/aliyundavURL` -O /tmp/aliyunwebdav.jar
          nohup java -jar /tmp/aliyunwebdav.jar --aliyundrive.refresh-token=`cat /tmp/refreshtoken.bin` --server.port=8900 --aliyundrive.auth.enable=false > /dev/null &
          sleep 10

      - name: 执行rclone指令
        env: 
          RCLONE_CONFIG_PASS: ${{secrets.RCLONE_CONFIG_PASS}}
        run: |
          echo 'running'${{github.event.client_payload.cmd}}
          rclone --config ./rclone.conf ${{ github.event.client_payload.cmd}}

